06-20 16:51:10 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Table "PLAY_EVOLUTIONS" not found; SQL statement:
select id, hash, apply_script, revert_script, state, last_problem from play_evolutions where state like 'applying_%' [42102-172]
06-25 15:01:49 jdbc[7]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO POLITIC "; expected "., (, DIRECT, SORTED, DEFAULT, VALUES, SET, (, SELECT, FROM"; SQL statement:
insert into politic [42001-172]
06-25 15:01:50 jdbc[7]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO POLITIC "; expected "., (, DIRECT, SORTED, DEFAULT, VALUES, SET, (, SELECT, FROM"; SQL statement:
insert into politic [42001-172]
06-25 15:01:50 jdbc[7]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO POLITIC "; expected "., (, DIRECT, SORTED, DEFAULT, VALUES, SET, (, SELECT, FROM"; SQL statement:
insert into politic [42001-172]
06-25 15:01:50 jdbc[7]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO POLITIC "; expected "., (, DIRECT, SORTED, DEFAULT, VALUES, SET, (, SELECT, FROM"; SQL statement:
insert into politic [42001-172]
06-25 15:25:14 jdbc[2]: exception
org.h2.jdbc.JdbcSQLException: Cannot parse "TIMESTAMP" constant ; SQL statement:
INSERT INTO "PUBLIC"."POLITIC"("ID","NAME","DATE_INSERT")VALUES(?,?,?) -- (?1, ?2, ?3) [22007-172]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:158)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:87)
	at org.h2.value.Value.convertTo(Value.java:821)
	at org.h2.table.Column.convert(Column.java:145)
	at org.h2.command.dml.Insert.insertRows(Insert.java:114)
	at org.h2.command.dml.Insert.update(Insert.java:86)
	at org.h2.command.CommandContainer.update(CommandContainer.java:79)
	at org.h2.command.Command.executeUpdate(Command.java:235)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:154)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:140)
	at org.h2.result.UpdatableRow.insertRow(UpdatableRow.java:320)
	at org.h2.jdbc.JdbcResultSet.insertRow(JdbcResultSet.java:2893)
	at org.h2.server.web.WebApp.editResult(WebApp.java:1026)
	at org.h2.server.web.WebApp.process(WebApp.java:221)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:164)
	at org.h2.server.web.WebThread.process(WebThread.java:138)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.lang.Thread.run(Thread.java:744)
Caused by: java.lang.StringIndexOutOfBoundsException: String index out of range: 0
	at java.lang.String.charAt(String.java:658)
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:262)
	at org.h2.value.ValueTimestamp.parseTry(ValueTimestamp.java:105)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:85)
	... 16 more
06-25 15:25:14 jdbc[2]: exception
org.h2.jdbc.JdbcSQLException: Cannot parse "TIMESTAMP" constant ; SQL statement:
INSERT INTO "PUBLIC"."POLITIC"("ID","NAME","DATE_INSERT")VALUES(?,?,?) -- (?1, ?2, ?3) [22007-172]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:158)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:87)
	at org.h2.value.Value.convertTo(Value.java:821)
	at org.h2.table.Column.convert(Column.java:145)
	at org.h2.command.dml.Insert.insertRows(Insert.java:114)
	at org.h2.command.dml.Insert.update(Insert.java:86)
	at org.h2.command.CommandContainer.update(CommandContainer.java:79)
	at org.h2.command.Command.executeUpdate(Command.java:235)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:154)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:140)
	at org.h2.result.UpdatableRow.insertRow(UpdatableRow.java:320)
	at org.h2.jdbc.JdbcResultSet.insertRow(JdbcResultSet.java:2893)
	at org.h2.server.web.WebApp.editResult(WebApp.java:1026)
	at org.h2.server.web.WebApp.process(WebApp.java:221)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:164)
	at org.h2.server.web.WebThread.process(WebThread.java:138)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.lang.Thread.run(Thread.java:744)
Caused by: java.lang.StringIndexOutOfBoundsException: String index out of range: 0
	at java.lang.String.charAt(String.java:658)
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:262)
	at org.h2.value.ValueTimestamp.parseTry(ValueTimestamp.java:105)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:85)
	... 16 more
06-25 15:25:37 jdbc[2]: exception
org.h2.jdbc.JdbcSQLException: Cannot parse "TIMESTAMP" constant "01/01/2014"; SQL statement:
INSERT INTO "PUBLIC"."POLITIC"("ID","NAME","DATE_INSERT")VALUES(?,?,?) -- (?1, ?2, ?3) [22007-172]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:158)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:87)
	at org.h2.value.Value.convertTo(Value.java:821)
	at org.h2.table.Column.convert(Column.java:145)
	at org.h2.command.dml.Insert.insertRows(Insert.java:114)
	at org.h2.command.dml.Insert.update(Insert.java:86)
	at org.h2.command.CommandContainer.update(CommandContainer.java:79)
	at org.h2.command.Command.executeUpdate(Command.java:235)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:154)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:140)
	at org.h2.result.UpdatableRow.insertRow(UpdatableRow.java:320)
	at org.h2.jdbc.JdbcResultSet.insertRow(JdbcResultSet.java:2893)
	at org.h2.server.web.WebApp.editResult(WebApp.java:1026)
	at org.h2.server.web.WebApp.process(WebApp.java:221)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:164)
	at org.h2.server.web.WebThread.process(WebThread.java:138)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.lang.Thread.run(Thread.java:744)
Caused by: java.lang.IllegalArgumentException: 01/01/2014
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:270)
	at org.h2.value.ValueTimestamp.parseTry(ValueTimestamp.java:105)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:85)
	... 16 more
06-25 15:25:37 jdbc[2]: exception
org.h2.jdbc.JdbcSQLException: Cannot parse "TIMESTAMP" constant "01/01/2014"; SQL statement:
INSERT INTO "PUBLIC"."POLITIC"("ID","NAME","DATE_INSERT")VALUES(?,?,?) -- (?1, ?2, ?3) [22007-172]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:158)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:87)
	at org.h2.value.Value.convertTo(Value.java:821)
	at org.h2.table.Column.convert(Column.java:145)
	at org.h2.command.dml.Insert.insertRows(Insert.java:114)
	at org.h2.command.dml.Insert.update(Insert.java:86)
	at org.h2.command.CommandContainer.update(CommandContainer.java:79)
	at org.h2.command.Command.executeUpdate(Command.java:235)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:154)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:140)
	at org.h2.result.UpdatableRow.insertRow(UpdatableRow.java:320)
	at org.h2.jdbc.JdbcResultSet.insertRow(JdbcResultSet.java:2893)
	at org.h2.server.web.WebApp.editResult(WebApp.java:1026)
	at org.h2.server.web.WebApp.process(WebApp.java:221)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:164)
	at org.h2.server.web.WebThread.process(WebThread.java:138)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.lang.Thread.run(Thread.java:744)
Caused by: java.lang.IllegalArgumentException: 01/01/2014
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:270)
	at org.h2.value.ValueTimestamp.parseTry(ValueTimestamp.java:105)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:85)
	... 16 more
06-25 15:26:38 jdbc[2]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO POLITIC VALUES(2, 'grill'     '2012-09-17 18:47:52.69'[*] ) "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
INSERT INTO politic VALUES(2, 'grill'     '2012-09-17 18:47:52.69' ) [42001-172]
06-26 11:13:06 jdbc[2]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT * FROM POLITIC 
SELECT[*] * FROM RECORD "; SQL statement:
SELECT * FROM POLITIC 
select * from RECORD [42000-172]
06-26 11:13:09 jdbc[2]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT * FROM POLITIC 
SELECT[*] * FROM RECORD "; SQL statement:
SELECT * FROM POLITIC 
select * from RECORD [42000-172]
06-30 17:07:12 jdbc[8]: exception
org.h2.jdbc.JdbcSQLException: The object is already closed [90007-172]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1410)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1388)
	at org.h2.jdbc.JdbcConnection.setAutoCommit(JdbcConnection.java:409)
	at com.jolbox.bonecp.ConnectionHandle.setAutoCommit(ConnectionHandle.java:1292)
	at play.api.db.BoneCPApi$$anon$1.onCheckOut(DB.scala:329)
	at com.jolbox.bonecp.AbstractConnectionStrategy.postConnection(AbstractConnectionStrategy.java:75)
	at com.jolbox.bonecp.AbstractConnectionStrategy.getConnection(AbstractConnectionStrategy.java:92)
	at com.jolbox.bonecp.BoneCP.getConnection(BoneCP.java:553)
	at com.jolbox.bonecp.BoneCPDataSource.getConnection(BoneCPDataSource.java:131)
	at scala.slick.jdbc.PlayDatabase.createConnection(PlayDatabase.scala:8)
	at scala.slick.jdbc.JdbcBackend$BaseSession.conn$lzycompute(JdbcBackend.scala:302)
	at scala.slick.jdbc.JdbcBackend$BaseSession.conn(JdbcBackend.scala:302)
	at scala.slick.jdbc.JdbcBackend$SessionDef$class.prepareStatement(JdbcBackend.scala:123)
	at scala.slick.jdbc.JdbcBackend$BaseSession.prepareStatement(JdbcBackend.scala:297)
	at scala.slick.jdbc.StatementInvoker.results(StatementInvoker.scala:28)
	at scala.slick.jdbc.StatementInvoker.iteratorTo(StatementInvoker.scala:16)
	at scala.slick.jdbc.Invoker$class.foreach(Invoker.scala:97)
	at scala.slick.jdbc.StatementInvoker.foreach(StatementInvoker.scala:9)
	at scala.slick.jdbc.Invoker$class.build(Invoker.scala:69)
	at scala.slick.jdbc.StatementInvoker.build(StatementInvoker.scala:9)
	at scala.slick.jdbc.Invoker$class.list(Invoker.scala:59)
	at scala.slick.jdbc.StatementInvoker.list(StatementInvoker.scala:9)
	at scala.slick.jdbc.UnitInvoker$class.list(Invoker.scala:157)
	at scala.slick.driver.JdbcInvokerComponent$UnitQueryInvoker.list(JdbcInvokerComponent.scala:50)
	at controllers.Application$$anonfun$index$1$$anonfun$3.apply(Application.scala:30)
	at controllers.Application$$anonfun$index$1$$anonfun$3.apply(Application.scala:26)
	at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:31)
	at scala.slick.jdbc.PlayDatabase.withSession(PlayDatabase.scala:6)
	at controllers.Application$$anonfun$index$1.apply(Application.scala:25)
	at controllers.Application$$anonfun$index$1.apply(Application.scala:23)
	at play.api.mvc.ActionBuilder$$anonfun$apply$11.apply(Action.scala:255)
	at play.api.mvc.ActionBuilder$$anonfun$apply$11.apply(Action.scala:255)
	at play.api.mvc.ActionBuilder$$anonfun$apply$10.apply(Action.scala:221)
	at play.api.mvc.ActionBuilder$$anonfun$apply$10.apply(Action.scala:220)
	at play.api.mvc.Action$.invokeBlock(Action.scala:357)
	at play.api.mvc.ActionBuilder$$anon$1.apply(Action.scala:309)
	at play.api.mvc.Action$$anonfun$apply$1$$anonfun$apply$4$$anonfun$apply$5.apply(Action.scala:109)
	at play.api.mvc.Action$$anonfun$apply$1$$anonfun$apply$4$$anonfun$apply$5.apply(Action.scala:109)
	at play.utils.Threads$.withContextClassLoader(Threads.scala:18)
	at play.api.mvc.Action$$anonfun$apply$1$$anonfun$apply$4.apply(Action.scala:108)
	at play.api.mvc.Action$$anonfun$apply$1$$anonfun$apply$4.apply(Action.scala:107)
	at scala.Option.map(Option.scala:145)
	at play.api.mvc.Action$$anonfun$apply$1.apply(Action.scala:107)
	at play.api.mvc.Action$$anonfun$apply$1.apply(Action.scala:100)
	at play.api.libs.iteratee.Iteratee$$anonfun$mapM$1.apply(Iteratee.scala:481)
	at play.api.libs.iteratee.Iteratee$$anonfun$mapM$1.apply(Iteratee.scala:481)
	at play.api.libs.iteratee.Iteratee$$anonfun$flatMapM$1.apply(Iteratee.scala:517)
	at play.api.libs.iteratee.Iteratee$$anonfun$flatMapM$1.apply(Iteratee.scala:517)
	at play.api.libs.iteratee.Iteratee$$anonfun$flatMap$1$$anonfun$apply$13.apply(Iteratee.scala:493)
	at play.api.libs.iteratee.Iteratee$$anonfun$flatMap$1$$anonfun$apply$13.apply(Iteratee.scala:493)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:42)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:386)
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
